#include <iostream>
#include <vector>
#include <queue>
#include <cmath> 
#include <algorithm> 

using namespace std;

int arr[51][5] = { 0, };
// 오, 위, 왼, 아
int dx[] = { 0, -1, 0, 1 };
int dy[] = { 1, 0, -1, 0 };
int r1, c1, r2, c2;

int main() {
	
	
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cin >> r1 >> c1 >> r2 >> c2;
	int len = 1;
	int cnt = 1;
	
	int x = 0, y = 0;
	if (r1 <= x && x <= r2 && c1 <= y && y <= c2) {
		arr[x - r1][y - c1] = cnt;
	}
	cnt++;

	int curLen = 0;
	int dir = 0;

	while(arr[0][0] == 0 || arr[r2 - r1][0] == 0 || arr[r2 - r1][c2 - c1] == 0 || arr[0][c2 - c1] == 0) {
		x += dx[dir], y += dy[dir];

		// 범위 내의 결과만 배열에 저장 
		if (r1 <= x && x <= r2 && c1 <= y && y <= c2) {
			arr[x - r1][y - c1] = cnt;
		}

		cnt++;
		curLen++;

		if (curLen == len) {
			curLen = 0;
			dir++;
			dir %= 4;

			if (dir == 0 || dir == 2)
				len++;
		}
	}

	int space = 0;
	while (cnt != 0) {
		cnt /= 10;
		space++;
	}

	for (int i = 0; i <= r2 - r1; i++) {
		for (int j = 0; j <= c2 - c1; j++) {
			cout.width(space);
			cout << arr[i][j] << " ";
		}
		cout<<"\n";
	}

	return 0;
}

