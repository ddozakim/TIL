#include <bits/stdc++.h>
using namespace std;

#define INF 1e9

int N,Q;
int dist[5001];
bool visited[5001];
vector<pair<int,int>> Mootube[5001];

void bfs(int start){
    queue<int> q;
    visited[start]=true;
    q.push(start);
    
    while(!q.empty()){
        int now = q.front();
        q.pop();
        
        for(int i=0; i<Mootube[now].size();i++){
            int next = Mootube[now][i].first;
            int usado = Mootube[now][i].second;
            if(!visited[next]){
                visited[next]=true;
                dist[next]=min(dist[now],usado);
                q.push(next);
            }
        }
    }
    return;
}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    
    cin>>N>>Q;
    
    for(int i=0; i<N-1;i++){
        int p,q,r;
        cin>>p>>q>>r;
        Mootube[p].push_back({q,r});
        Mootube[q].push_back({p,r});
    }
    
    while(Q--){
        int k,v;
        cin>>k>>v;
        
        fill(dist, dist+N+1, INF);
        memset(visited,false, sizeof(visited));
        bfs(v);
        int count=0;
        for(int i=1; i<=N;i++){
            if(i==v) continue;
            if(dist[i]>=k) count++;
        }
        cout<<count<<"\n";
    }

    return 0;
}
