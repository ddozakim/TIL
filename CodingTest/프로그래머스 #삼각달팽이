#include <string>
#include <vector>

using namespace std;

vector<int> solution(int n) {
    vector<vector<int>> board(n, vector<int>(n, 0)); // n x n 2차원 배열
    vector<int> answer;

    int x = -1, y = 0;  // 시작 좌표를 (-1, 0)으로 설정하여 처음에 아래로 이동 가능
    int num = 1;        // 채울 숫자
    int direction = 0;  // 방향: 0=아래, 1=오른쪽, 2=위왼쪽
    int steps = n;      // 현재 방향에서 몇 번 이동할지

    while (steps > 0) {
        for (int i = 0; i < steps; i++) {
            if (direction % 3 == 0) x++;        // 아래로
            else if (direction % 3 == 1) y++;   // 오른쪽으로
            else { x--; y--; }                  // 위-왼쪽 대각선

            board[x][y] = num++;
        }
        direction++;  // 방향 바꿈
        steps--;      // 다음 방향에서는 1칸 덜 이동
    }

    // 2차원 배열을 1차원으로 변환
    for (int i = 0; i < n; i++) {
        for (int j = 0; j <= i; j++) {
            answer.push_back(board[i][j]);
        }
    }

    return answer;
}
