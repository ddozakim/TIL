#include <iostream>
#include <vector>
#include <queue>
#include <algorithm>
using namespace std;


int main(void){
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	
    int n,k;
    cin>>n>>k;

    vector<pair<int,int>> jewels(n);
    vector<int> bags(k);
    
    for(int i=0; i<n;i++){
        cin>>jewels[i].first>>jewels[i].second;
    }
    for(int i=0; i<k;i++){
        cin>>bags[i];
    }
    
    sort(jewels.begin(),jewels.end());
    sort(bags.begin(),bags.end());
    
    priority_queue<int> pq;
    
    long long total=0;
    int index=0;

    for(int i=0; i<k; i++){
        int bag_weight = bags[i];
        
        for(int j=index; j<jewels.size();j++){
            if(jewels[j].first<=bag_weight){
                pq.push(jewels[j].second);
                index++;
            }
            else break;
        }
        if(!pq.empty()){
            total+=pq.top();
            pq.pop();
        }
        
    }
    
    cout<<total;
    
	return 0;
}
