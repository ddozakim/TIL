#include <iostream>
#include <vector>
#include <queue>

using namespace std;

bool visited[1001];
vector<int> graph[1001];

void BFS(int node){
    queue<int> q;
    q.push(node);
    visited[node]=true;
    
    while(!q.empty()){
        int now = q.front();
        q.pop();
        
        for(auto edge : graph[now]){
            if(!visited[edge]){
                visited[edge]=true;
                q.push(edge);
            }
        }
    }
}


int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    
    
    int N,M;
    cin>>N>>M;
    for(int i=0; i<M ;i++){
        int u,v;
        cin>>u>>v;
        graph[u].push_back(v);
        graph[v].push_back(u);
    }
    int cnt=0;
    for(int i=1; i<=N;i++){
        if(!visited[i]){
            BFS(i);
            cnt++;
        }
    }
    
    cout<<cnt;
    
    return 0;
}
