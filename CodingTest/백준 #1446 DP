#include <iostream>
#include <vector>
#include <algorithm>
#define INF 1e9  // 무한대 정의
using namespace std;


int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    
    int N, D;
    cin>>N>>D;
    
    vector<int> dist(D + 1, INF);
    dist[0] = 0;  // 시작 지점의 거리는 0
    vector<pair<int, pair<int, int>>> shortcuts;
    
    // 지름길 입력 받기
    for (int i = 0; i < N; i++) {
        int start, end, length;
        cin >> start >> end >> length;

        // 도착 지점이 고속도로 길이를 초과하는 경우 무시
        if (end <= D) {
            shortcuts.push_back({start, {end, length}});
        }
    }
    
     // 0부터 D까지 거리 계산 
    for (int i = 0; i <= D; i++) {
        // 이전 거리 + 1km로 현재 지점까지의 최소 거리 갱신
        if (i > 0) {
            dist[i] = min(dist[i], dist[i - 1] + 1);
        }

        // 현재 위치에서 사용할 수 있는 지름길 탐색
        for (auto& p : shortcuts) {
            int start = p.first;
            int end = p.second.first;
            int length = p.second.second;

            // 현재 위치가 지름길의 시작 지점이라면 거리 갱신
            if (i == start && end <= D) {
                dist[end] = min(dist[end], dist[i] + length);
            }
        }
    }

    
    return 0;
}

