#include <iostream>
#include <queue>
#include <algorithm>

using namespace std;

int graph[100][100];
int n,m;

int dx[4] = {-1, 1, 0, 0};
int dy[4] = {0, 0, -1, 1};

int BFS(int x, int y){
    queue<pair<int,int>> q;
    q.push({x,y});
    
    while(!q.empty()){
        int x=q.front().first;
        int y=q.front().second;
        q.pop();
        
        for(int i=0;i<4;i++){
            int nx=x+dx[i];
            int ny=y+dy[i];
            
            if(nx<0||nx>=n||ny<0||ny>=m) continue;
            if(graph[nx][ny]==0) continue;
            if(graph[nx][ny]==1){
                graph[nx][ny]=graph[x][y]+1;
                q.push({nx,ny});
            }
        }
    }
    
    return graph[n-1][m-1];
}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    
    cin>>n>>m;
    
    
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            char ch;
            cin >> ch;           // 한 자리씩 입력받음
            graph[i][j] = ch - '0'; // 문자를 숫자로 변환
        }
    }
    cout<<BFS(0,0);
    return 0;
}
