#include <bits/stdc++.h>
using namespace std;

int N;
int r1,c1,r2,c2;
int arr[200][200];
int dx[6] = {-2,-2,0,0,2,2};
int dy[6]={-1,1,-2,2,-1,1};
bool visited[200][200];

int bfs(int x, int y){
    queue<pair<pair<int,int>,int>> q;
    q.push({{x,y},0});
    visited[x][y]=true;
    
    while(!q.empty()){
        int a = q.front().first.first;
        int b = q.front().first.second;
        int count = q.front().second;
        q.pop();
        
        if(a==r2 && b==c2){
            return count;
        }
        
        for(int i=0; i<6;i++){
            int nx = a+dx[i];
            int ny = b+dy[i];
            if(nx<0||ny<0||nx>=N||ny>=N) continue;
            if(!visited[nx][ny]){
                q.push({{nx,ny},count+1});
                visited[nx][ny]=true;
            }
        }
    }
    return -1;
}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    
    cin>>N>>r1>>c1>>r2>>c2;
    
    cout<<bfs(r1,c1);
    
    
    return 0;
}
