#include <iostream>
#include <vector>

using namespace std;

int n,m;
int dp[101][10001];


int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    
    cin>>n>>m;
    int total=0;
    vector<int> memory(n+1);
    vector<int> cost(n+1);
    
    for(int i=1; i<=n ;i++){
        cin>>memory[i];
    }
    for(int i=1; i<=n ;i++){
        cin>>cost[i];
        total+=cost[i];
    }
    
    for(int i=1; i<=n;i++){
        for(int j=0; j<=total ;j++){
            if(j-cost[i]>=0) dp[i][j] = max(dp[i-1][j],dp[i-1][j-cost[i]]+memory[i]);
            else dp[i][j] = dp[i - 1][j];
        }
    }
    
    for (int i = 0; i <= total; i++)
	{
		if (dp[n][i] >= m)
		{
			cout << i << endl;
			break;
		}
	}
    
    return 0;
}
