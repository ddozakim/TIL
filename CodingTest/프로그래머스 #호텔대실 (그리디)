#include <iostream>
#include <vector>
#include <algorithm>
#include <queue>

using namespace std;

int solution(vector<vector<string>> book_time) {
    vector<pair<int, int>> info;
    
    for (auto &time : book_time) {
        int start = stoi(time[0].substr(0, 2)) * 60 + stoi(time[0].substr(3, 2));
        int end = stoi(time[1].substr(0, 2)) * 60 + stoi(time[1].substr(3, 2)) + 10;
        info.push_back({start, end});
    }
    
    sort(info.begin(), info.end());
    
    priority_queue<int, vector<int>, greater<int>> pq;
    
    for (auto &[start, end] : info) {
        if (!pq.empty() && pq.top() <= start) {
            pq.pop();
        }
        pq.push(end);
    }
    
    return pq.size();
}
