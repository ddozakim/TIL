#include <iostream>
#include <queue>
using namespace std;

int n,m;
int board[101];
bool visited[101];

int bfs(){
    queue<pair<int, int>> q; // (현재 칸, 주사위 굴린 횟수)
    q.push({1,0});
    visited[1]=true;
    
    while(!q.empty()){
        int now= q.front().first;
        int count = q.front().second;
        q.pop();
        
        if(now==100) return count;
        
        for(int i=1; i<=6;i++){
            int next= i+now;
        
            next=board[next]; // 사다리나 뱀이 있다면 해당 위치로 이동
            
            if(next>100) continue;
            
            if(!visited[next]){
                visited[next]=true;
                q.push({next,count+1});
            }
        }
    }
}


int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);

    cin >> n>>m;
    
    for (int i = 1; i <= 100; i++) {
        board[i] = i;
    }
    
     // 사다리 입력 처리
    for (int i = 0; i < n; i++) {
        int x, y;
        cin >> x >> y;
        board[x] = y;
    }

    // 뱀 입력 처리
    for (int i = 0; i < m; i++) {
        int u, v;
        cin >> u >> v;
        board[u] = v;
    }
    
    cout<<bfs();
    
    return 0;
}
