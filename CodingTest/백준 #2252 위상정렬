#include <iostream>
#include <vector>
#include <queue>
using namespace std;

int N,M;
int inDegree[32001]={0,};

void topologicalSort(vector<int> graph[]){
    queue<int> q;
    
    for(int i=1; i<=N;i++){
        if(inDegree[i]==0){
            q.push(i); //진입 차수가 0인 노드
        }
    }
    
    for(int i=0;i<N;i++){
        if(q.empty()){
            return;
        }
        
        int from=q.front();
        cout<<from<<" ";
        q.pop();
        for(int j=0; j<graph[from].size();j++){
            int to =graph[from][j];
            inDegree[to]--;
            if(inDegree[to]==0){
                q.push(to);
            }
        }
    }
}

int main()
{
    
    cin>>N>>M;
    
    vector<int> graph[N+1];
    
    for(int i=0;i<M;i++){
        int A,B;
        cin>>A>>B;
        graph[A].push_back(B);
        ++inDegree[B];
    }
    topologicalSort(graph);
    
    return 0;
}
