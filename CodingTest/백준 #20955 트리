#include <bits/stdc++.h>
using namespace std;

int n,m; 
int cycle =0; //사이클 개수
int count =0; //트리 개수
vector<int> tree[100001];
bool visited[100001];

void bfs(int start){
    queue<pair<int,int>> q;
    q.push({start,0});
    visited[start]=true;
    
    while(!q.empty()){
        int now = q.front().first;
        int parent = q.front().second;
        q.pop();
        
        for(auto next : tree[now]){
            if(!visited[next]){
                visited[next]=true;
                q.push({next,now});
            }
            else if(next!=parent){
                cycle++;
            }
        }
    }
}

 
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    
    cin>>n>>m;
    for(int i=0; i<m;i++){
        int a,b;
        cin>>a>>b;
        tree[a].push_back(b);
        tree[b].push_back(a);
    }
    
    for(int i=1; i<=n;i++){
        if(!visited[i]){
            bfs(i);
            count++;
        }
    }
    
    cycle/=2;// 중복 카운트된 사이클 보정
    int answer = count+cycle-1;
    cout<<answer;
    
    return 0;
}
