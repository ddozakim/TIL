#include <iostream>
#include <vector>
#include <algorithm>
#include <queue>

using namespace std;

long F,S,G,U,D;
bool visited[1000001];
int MOVE[2];

void BFS(int start){
    queue<pair<int, int>> q; //층, 횟수
    q.push({start,0});
    visited[start]=true;
    
    while(!q.empty()){
        int now = q.front().first;
        int count = q.front().second;
        q.pop();
        
        if(now==G) {
            cout<<count;
            return;
        }
        for(int i=0; i<2; i++){
            int next = now+MOVE[i];
            if(next<=0 || next >F) continue;
            if(!visited[next]){
                visited[next]=true;
                q.push({next,count+1});
            }
        }
        
    }
    cout<< "use the stairs";
    return;
    
}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    
    
    cin>>F>>S>>G>>U>>D;
    MOVE[0]=U;
    MOVE[1]=-D;
    BFS(S);
    
    
    return 0;
}
