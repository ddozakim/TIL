#include <iostream>
#include <vector>
#include <algorithm>
#include <queue>
using namespace std;

#define max 32001

int n=0;
int m=0;
int inDegree[max]={0,};

void TopologicalSort(vector<int> graph[]){
    priority_queue<int,vector<int>,greater<int>> pq; //먼저 푸는 것이 좋은 순서를 꺼내 쓰기위해
    for(int i=1; i<=n;i++){
        if(inDegree[i]==0){
            pq.push(i);
        }
    }
    queue<int> q;
    
    while(!pq.empty()){
        q.push(pq.top());
        pq.pop();
        int x = q.front();
        q.pop();
        cout<<x<<" ";
        for(int i=0; i<graph[x].size();i++){
            int y=graph[x][i];
            inDegree[y]--;
            if(inDegree[y]==0){
                pq.push(y);
            }
        }
    }
    
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    
    cin>>n>>m;
    vector<int> graph[n+1];
    for(int i=0; i<m;i++){
        int x,y;
        cin>>x>>y;
        graph[x].push_back(y);
        inDegree[y]++;
    }
    
    TopologicalSort(graph);
    
    return 0;
}
