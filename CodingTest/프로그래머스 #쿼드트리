#include <vector>

using namespace std;

vector<int> answer(2, 0); // {0의 개수, 1의 개수}

bool isSame(const vector<vector<int>>& arr, int x, int y, int size) {
    int first = arr[x][y];
    for (int i = x; i < x + size; i++) {
        for (int j = y; j < y + size; j++) {
            if (arr[i][j] != first) return false;
        }
    }
    return true;
}

void compress(const vector<vector<int>>& arr, int x, int y, int size) {
    if (isSame(arr, x, y, size)) {
        answer[arr[x][y]]++; // arr[x][y]가 0이면 answer[0]++, 1이면 answer[1]++
        return;
    }
    
    int newSize = size / 2;
    compress(arr, x, y, newSize);              // 좌상
    compress(arr, x, y + newSize, newSize);    // 우상
    compress(arr, x + newSize, y, newSize);    // 좌하
    compress(arr, x + newSize, y + newSize, newSize); // 우하
}

vector<int> solution(vector<vector<int>> arr) {
    compress(arr, 0, 0, arr.size());
    return answer;
}
