#include <vector>
#include <cmath>

using namespace std;

int solution(int N, vector<int> stations, int W) {
    int answer = 0;
    int coverage = 2 * W + 1; // 한 개의 기지국이 커버할 수 있는 범위
    int prev_end = 0; // 마지막으로 커버된 위치

    for (int station : stations) {
        int start = station - W; // 현재 기지국의 시작 범위
        if (start > prev_end + 1) { // 이전 커버된 범위 이후로 공백이 있는 경우
            int gap = start - (prev_end + 1); // 전파가 닿지 않는 구간 크기
            answer += (gap + coverage - 1) / coverage; 
        }
        prev_end = station + W; // 현재 기지국의 마지막 커버 범위 업데이트
    }

    // 마지막 기지국 이후로 전파가 닿지 않는 구간 처리
    if (prev_end < N) {
        int gap = N - prev_end;
        answer += (gap + coverage - 1) / coverage;
    }

    return answer;
}
