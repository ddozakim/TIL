#include <iostream>
#include <vector>
#include <queue>
using namespace std;

int N, node;
vector<int> tree[50]; 

int bfs(int root){
    
    if(node == root) return 0;
    
    queue<int> q;
    q.push(root);
    int cnt=0;
    
    while(!q.empty()){
        int now = q.front();
        q.pop();
        
        if(now==node) continue;
        
        bool isLeaf=true;
        for(int i=0; i< tree[now].size();i++){
            int next = tree[now][i];
            if (next == node) continue;
            q.push(next);
            isLeaf = false;
        }
        
        if(isLeaf) cnt++;
        
    }
    return cnt;
}


int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    
    cin>>N;
    int root;
    for(int i=0 ;i<N;i++){
        int tmp;
        cin>>tmp;
        if(tmp==-1) root= i;
        else tree[tmp].push_back(i);
    }
    cin>> node;
    
    cout<<bfs(root); 
    
    return 0;
}
